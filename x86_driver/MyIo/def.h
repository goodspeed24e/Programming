
extern HANDLE hDriver;
extern drivertype;

// Define the various device type values.  Note that values used by Microsoft
// Corporation are in the range 0-32767, and 32768-65535 are reserved for use
// by customers.

#define FILE_DEVICE_MYIO 0x00008010

// Macro definition for defining IOCTL and FSCTL function control codes.
// Note that function codes 0-2047 are reserved for Microsoft Corporation,
// and 2048-4095 are reserved for customers.

enum
{
	MYIO_IOCTL_MEM_READ = 0x810,
	MYIO_IOCTL_MEM_WRITE,
	MYIO_IOCTL_IO_BYTE_READ,
	MYIO_IOCTL_IO_WORD_READ,
	MYIO_IOCTL_IO_DWORD_READ,
	MYIO_IOCTL_IO_BYTE_WRITE,
	MYIO_IOCTL_IO_WORD_WRITE,
	MYIO_IOCTL_IO_DWORD_WRITE,
	MYIO_IOCTL_PCI_READ,
	MYIO_IOCTL_PCI_WRITE,
	
	MYIO_IOCTL_REF_COUNT
};

#define IOCTL_MYIO_MEM_READ				CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_MEM_READ, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_MYIO_MEM_WRITE			CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_MEM_WRITE, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_MYIO_IO_BYTE_READ		CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_BYTE_READ, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_MYIO_IO_WORD_READ		CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_WORD_READ, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_MYIO_IO_DWORD_READ	CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_DWORD_READ, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_MYIO_IO_BYTE_WRITE	CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_BYTE_WRITE, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_MYIO_IO_WORD_WRITE	CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_WORD_WRITE, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_MYIO_IO_DWORD_WRITE	CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_IO_DWORD_WRITE, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_PCI_READ_CFG				CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_PCI_READ, METHOD_BUFFERED, FILE_READ_ACCESS )
#define IOCTL_PCI_WRITE_CFG				CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_PCI_WRITE, METHOD_BUFFERED, FILE_WRITE_ACCESS)


#define IOCTL_GET_REFCOUNT				CTL_CODE(FILE_DEVICE_MYIO, MYIO_IOCTL_REF_COUNT, METHOD_BUFFERED, FILE_ANY_ACCESS)


#define VXD_DRIVER_USE (1<<0)
#define SYS_DRIVER_USE (1<<1)
#define PCIBIOS_READY (1<<2)
#define LIB_IO_FUNC_USE (1<<3)

#define pciBusDevFunc(Bus,Dev,Func)		((Bus&0xff)<<8)|((Dev&0x1f)<<3)|(Func&7)

#define PCI_ERR_BUSNOTEXIST	(0xE0000001L)  
#define PCI_ERR_NODEVICE	(0xE0000002L)
#define PCI_ERR_CONFWRITE	(0xE0000003L)
#define PCI_ERR_CONFREAD	(0xE0000004L)
#define PCI_ERR_EVENTCREATE	(0xE0000005L)

typedef struct _MYIO_MEMREAD_INPUT
{
	ULONG   address;     
	ULONG   unitsize;
	ULONG	count;
}MYIO_MEMREAD_INPUT;

typedef struct _MYIO_MEMWRITE_INPUT
{
	ULONG   address;     
	ULONG   unitsize;
	ULONG	count;
	char	data[1];
}MYIO_MEMWRITE_INPUT;

typedef struct _MYIO_WRITE_INPUT
{
	ULONG   PortNumber;     // Port # to write to
	union
	{// Data to be output to port
		ULONG   LongData;
		USHORT  ShortData;
		UCHAR   CharData;
	};
}MYIO_WRITE_INPUT;

typedef struct  _MYIO_PCICFGREAD_INPUT
{
	ULONG   pci_address;     
	ULONG   pci_offset;     
}MYIO_PCICFGREAD_INPUT;

typedef struct  _MYIO_PCICFGWRITE_INPUT {
	ULONG   pci_address;     
	ULONG   pci_offset;     
	char	data[1];
}MYIO_PCICFGWRITE_INPUT;
